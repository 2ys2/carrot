<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.carrot.repository.ItemPostRepository">
    <insert id="insert" parameterType="com.carrot.domain.ItemPostVO"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into item_post values(item_post_id.nextval, #{title}, #{content}, #{loc1}, #{loc2}, #{loc3},
        #{writer}, 0, #{price}, 0, #{category_id}, #{created_at}, #{hart_cnt})
    </insert>

    <update id="updateComplete" parameterType="int">
        update ITEM_POST set status = 1 where id = #{id}
    </update>

    <update id="delete" parameterType="com.carrot.domain.ItemPostVO">
        update item_post set status = 2
        where id = #{id} and writer = #{writer}
    </update>

    <select id="selectCount" parameterType="com.carrot.domain.SearchVO" resultType="int">
        select count(*) from item_post
        <where>
            status = 0
            <if test="category_id != 0">
                and category_id = #{category_id}
            </if>
            <if test="loc1 != null">
                and loc1 = #{loc1}
            </if>
            <if test="loc2 != null">
                and loc2 = #{loc2}
            </if>
            <if test="loc3 != null">
                and loc3 = #{loc3}
            </if>
            <if test="title != null">
                and title like '%' || #{title} || '%'
            </if>
        </where>
    </select>

    <select id="selectById" resultType="com.carrot.domain.ItemPostVO" parameterType="int">
        select item.id,
        item.title,
        item.content,
        item.loc1,
        item.loc2,
        item.loc3,
        item.writer,
        item.price,
        item.status,
        item.category_id,
        item.created_at,
        (select count(*) from hart where item_post_id = #{id})                        as hart_cnt,
        (select count(*) from CHATTING_ROOM where ITEM_POST_ID = #{id})               as chat_cnt,
        writer.NICKNAME                                                            as writer_nickname,
        cate.NAME                                                                  as category_name,
        (select count(*) from TRADE where writer.ID = SELLER or writer.ID = BUYER) as writer_trade_cnt
        from item_post item,
        USER_INFO writer,
        CATEGORY cate
        where item.Writer = writer.ID
        and item.category_id = cate.ID
        and item.id = #{id}
    </select>

    <select id="selectByWriter" resultType="com.carrot.domain.ItemPostVO">
        select * from item_post where  (status = 0 or status = 1) and writer=#{writer} order by status asc, id desc
    </select>
    
    <select id="selectByBuyer" resultType="com.carrot.domain.ItemPostVO">
    	select i.* from trade t, item_post i where t.item_post_id = i.id and buyer=#{buyer} order by i.id desc
    </select>

    <select id="search" resultType="com.carrot.domain.ItemPostVO" parameterType="com.carrot.domain.SearchVO">
        select distinct p.id,
        p.title,
        p.content,
        p.loc1,
        p.loc2,
        p.loc3,
        p.writer,
        p.price,
        p.status,
        p.category_id,
        p.created_at,
        nvl(c.chat_cnt, 0) as chat_cnt,
        nvl(h.hart_cnt, 0) as hart_cnt
        from item_post p
        left join (select item_post_id, count(*) over (partition by ITEM_POST_ID) as chat_cnt from CHATTING_ROOM where status = 3) c
        on p.id = c.ITEM_POST_ID
        left join (select item_post_id, count(*) over (partition by item_post_id) as hart_cnt from hart) h
        on p.id = h.item_post_id
        <where>
            status = 0
            <if test="category_id != 0">
                and category_id = #{category_id}
            </if>
            <if test="loc1 != null">
                and loc1 = #{loc1}
            </if>
            <if test="loc2 != null">
                and loc2 = #{loc2}
            </if>
            <if test="loc3 != null">
                and loc3 = #{loc3}
            </if>
            <if test="title != null">
                and title like '%' || #{title} || '%'
            </if>
        </where>
        order by id desc offset #{pageStartCnt} rows fetch first #{pageSize} rows only
    </select>

    <update id="addChatCnt" parameterType="int">
        update item_post set chat_cnt = chat_cnt + 1 where id=#{postId}
    </update>

    <update id="minusChatCnt" parameterType="int">
        update item_post set chat_cnt = chat_cnt - 1 where id=#{postId}
    </update>

    <insert id="createTrade" parameterType="hashMap">
        insert into trade values (
            trade_id.nextval, #{postId}, null, null,
            (select writer from item_post where id = #{postId}),
            (select id from user_info where nickname = #{buyerName}),
            #{date}
        )
    </insert>

    <select id="selectTradeById" resultType="com.carrot.domain.TradeVO">
        select * from trade where seller=#{id} or buyer=#{id} order by id desc
    </select>

    <select id="selectHeartById" resultType="com.carrot.domain.ItemPostVO">
        select i.* from item_post i, hart h where i.id = h.item_post_id and h.user_id=#{id}
    </select>

</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.carrot.repository.ChatRepository">
    <resultMap id="chatRoom" type="com.carrot.domain.ChatRoomVO">
        <id property="id" column="id"/>
        <result property="itemPostId" column="item_post_id"/>
        <result property="buyer" column="buyer"/>
        <result property="buyerName" column="buyer_name"/>
        <result property="seller" column="seller"/>
        <result property="sellerName" column="seller_name"/>
        <result property="status" column="status"/>
        <collection property="lastMessage" ofType="com.carrot.domain.ChatMessageVO">
            <id property="id" column="chat_id"/>
            <result property="writer" column="writer"/>
            <result property="writerName" column="writer_name"/>
            <result property="content" column="content"/>
            <result property="createdAt" column="created_at"/>
            <result property="roomId" column="chatting_room_id"/>
            <result property="isRead" column="is_read"/>
        </collection>
    </resultMap>

    <resultMap id="chatMessage" type="com.carrot.domain.ChatMessageVO">
        <id property="id" column="id"/>
        <result property="writer" column="writer"/>
        <result property="writerName" column="writer_name"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="roomId" column="chatting_room_id"/>
        <result property="isRead" column="is_read"/>
    </resultMap>

    <select id="getAllChatRooms" resultMap="chatRoom" parameterType="java.lang.String">
        select r.*, c.*, c.id as chat_id, u1.nickname as buyer_name, u2.nickname as seller_name
        from chatting_room r, chatting_content c, user_info u1, user_info u2
        where r.last_message=c.id and r.buyer=u1.id and r.seller=u2.id
        and ((r.buyer = #{userId} and r.status in (2,3)) or (r.seller = #{userId} and r.status in (1,3))) order by created_at desc
    </select>

    <select id="getChatMessages" resultMap="chatMessage">
        select c.*, u.nickname as writer_name
        from chatting_content c, user_info u
        where c.writer = u.id and chatting_room_id = #{id} order by created_at asc
    </select>

    <insert id="insertChatMessage" parameterType="com.carrot.domain.ChatMessageVO">
        insert into chatting_content values (chatting_content_id.nextval, #{writer}, #{content}, #{createdAt}, #{roomId}, ${isRead})
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select chatting_content_id.currval from dual
        </selectKey>
    </insert>

    <update id="updateLastMessage" parameterType="hashMap">
        update chatting_room set last_message=#{messageId} where id=#{roomId}
    </update>

    <select id="search" parameterType="hashMap" resultType="int">
        select count(*) from chatting_room where item_post_id=${postId} and buyer='${buyer}'
    </select>

    <insert id="createRoom" parameterType="com.carrot.domain.ChatRoomVO">
        insert into chatting_room values (chatting_room_id.nextval, #{itemPostId}, #{buyer}, #{seller}, #{status}, null)
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select chatting_room_id.currval from dual
        </selectKey>
    </insert>

    <update id="updateIsRead" parameterType="hashMap">
        update chatting_content set is_read=0 where chatting_room_id=#{roomId} and writer!=#{userId}
    </update>

    <select id="selectRoomById" parameterType="int" resultType="com.carrot.domain.ChatRoomVO">
        select c.*, u1.nickname as sellerName, u2.nickname as buyerName
        from chatting_room c, user_info u1, user_info u2
        where c.id=#{id} and u1.id=c.seller and u2.id=c.buyer
    </select>

    <update id="updateRoomStatus" parameterType="hashMap">
        update chatting_room set status=status-#{num} where id=#{roomId}
    </update>

    <select id="getRoomStatusById" parameterType="int" resultType="int">
        select status from chatting_room where id=#{roomId}
    </select>

    <select id="getBuyer" parameterType="int" resultMap="chatRoom">
        select c.*, u1.nickname as seller_name, u2.nickname as buyer_name
        from chatting_room c,
        user_info u1,
        user_info u2
        where c.ITEM_POST_ID = #{itemPostId}
        and u1.id = c.seller
        and u2.id = c.buyer
        and c.status = 3
    </select>
</mapper>
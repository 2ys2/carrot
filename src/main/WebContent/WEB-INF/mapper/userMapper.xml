<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.carrot.repository.UserRepository">        


		<select id="selectById" resultType="com.carrot.domain.UserVO">
			select id,
			NICKNAME,
			PASSWORD,
			EMAIL,
			loc1,
			loc2,
			loc3,
			(select count(*) from TRADE where BUYER = #{id} or SELLER = #{id}) as completed_cnt
			from user_info where id = #{id}
		</select>
	
		<select id="selectByAuth" resultType="com.carrot.domain.AuthVO">
			select * from role where user_id = #{user_id}
		</select>
		
		<insert id="signUp" parameterType="com.carrot.domain.UserVO">
			insert into user_info(id, nickname, password, email, loc1, loc2, loc3) values 
			(#{id}, #{nickname, jdbcType=VARCHAR}, #{password}, #{email}, #{loc1, jdbcType=VARCHAR }, #{loc2, jdbcType=VARCHAR}, #{loc3, jdbcType=VARCHAR})
		</insert>

		<insert id="signUp_auth" parameterType="com.carrot.domain.AuthVO">
			insert into role(user_Id, auth) values (#{user_id}, 'ROLE_MEMBER')
		</insert>
		
		<select id="idCheck" parameterType="String" resultType="Integer">
           SELECT count(*) FROM user_info WHERE id = #{id}
        </select>
    
 		<select id="nicCheck" parameterType="String" resultType="Integer">
          SELECT count(*) FROM user_info WHERE nickname = #{nickname}
        </select>
    
 		<select id="emailCheck" parameterType="String" resultType="Integer">
           SELECT count(*) FROM user_info WHERE email = #{email}
        </select>
    
        <update id="updateUser" parameterType="com.carrot.domain.UserVO">
        	update user_info set email=#{email}, nickname=#{nickname}, loc1=#{loc1}, loc2=#{loc2}, loc3=#{loc3} where id=#{id}
        </update>
        
        <update id="updatePwd" parameterType="HashMap">
        	update user_info set password=#{encodepw} where id=#{id}
        </update>
    
        <delete id="withdrawSignUp">
        	delete from user_info where id=#{id}
        </delete>
    
        <select id ="findId"  resultType ="String">
          SELECT * FROM user_info WHERE email = #{email} AND 
          NOT (id LIKE 'NAVER_%' OR id LIKE 'KAKAO_%' OR id LIKE 'GOOGLE_%')
        </select>
        
        <select id="findPassword" resultType="Integer">
          SELECT count(*) FROM user_info
          WHERE id = #{id} AND email = #{email}
        </select>
        
        <update id = "updatePassword" >
          update user_info set password = #{password} where id=#{id}
        </update>
    
</mapper>	
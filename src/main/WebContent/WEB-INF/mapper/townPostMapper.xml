<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.carrot.repository.TownPostRepository">

<select id="listBySearch" parameterType="com.carrot.domain.SearchVO" resultType="com.carrot.domain.TownPostVO" >
	select t.*, u.nickname from town_post t, user_info u
	     <where>
	     t.writer = u.id
            <if test="category_id != 0">
                and t.category_id = #{category_id} 
            </if>
            <if test="loc1 != null">
                and t.loc1 = #{loc1}
            </if>
            <if test="loc2 != null">
                and t.loc2 = #{loc2}
            </if>
            <if test="loc3 != null">
                and t.loc3 = #{loc3}
            </if>
            <if test="title != null">
            	and t.title LIKE '%' || #{title} || '%' 
            </if>
        </where>
        order by t.id desc offset #{pageStartCnt} rows fetch first #{pageSize} rows only
</select>

 <select id="selectCount" parameterType="com.carrot.domain.SearchVO" resultType="int">
        select count(*) from town_post
        <where>
            <if test="category_id != 0">
                category_id = #{category_id}
            </if>
            <if test="loc1 != null">
                and loc1 = #{loc1}
            </if>
            <if test="loc2 != null">
                and loc2 = #{loc2}
            </if>
            <if test="loc3 != null">
                and loc3 = #{loc3}
            </if>
            <if test="title != null">
                and title like '%' || #{title} || '%'
            </if>
        </where>
    </select>

<insert id="insertPost" parameterType="com.carrot.domain.TownPostVO">
	insert into town_post ( id, title, content, writer, read_cnt, reply_cnt, loc1, loc2, loc3, created_at, category_id )
	values ( town_post_id.nextval, #{title}, #{content}, #{writer}, 0, 0, #{loc1}, #{loc2}, #{loc3}, #{created_at}, #{category_id} )
</insert>

<select id="detailPost" resultType="com.carrot.domain.TownPostVO">
	select t.*, u.nickname from town_post t, user_info u where t.writer = u.id and t.id = #{id}
</select>

<update id="readCount">
	update town_post set read_cnt = read_cnt + 1 where id = #{id}
</update>

<update id="updatePost" parameterType="com.carrot.domain.TownPostVO">
	update town_post set  title = #{title}, content=#{content} where id = #{id}
</update>

<delete id="deletePost">
	delete from town_post where id=#{id}
</delete>

<insert id="insertReply" parameterType="com.carrot.domain.ReplyVO" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
	insert into reply (id, town_post_id, parent, content, created_at, writer, status )
	values ( reply_id.nextval, #{townPostId}, #{parent}, #{content}, #{created_at}, #{writer}, 0 )
</insert>

<update id="deleteReply">
	update reply set status=1 where id=#{id}
</update>

<delete id="deleteAllReply">
	delete from reply where town_post_id=#{postid}
</delete>

<update id="replyCount">
	update town_post set reply_cnt = reply_cnt + 1 where id = #{postid}
</update>

<update id="replyCountDelete">
	update town_post set reply_cnt = reply_cnt - 1 where id = #{postid}
</update>

<select id="replList" resultType="com.carrot.domain.ReplyVO">
	select r.*, u.nickname from reply r, user_info u where r.writer = u.id and town_post_id=#{id} and parent=0 order by r.id asc
</select>

<select id="rereplList" resultType="com.carrot.domain.ReplyVO">
	select r.*, u.nickname from reply r, user_info u where r.writer = u.id and parent=#{parent} order by r.id asc
</select>

<delete id="withdrawPost">
	delete from town_post where writer=#{writer}
</delete>
<delete id="withdrawReply">
	delete from reply where writer={writer}
</delete>

</mapper>